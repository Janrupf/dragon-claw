plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "net.janrupf.dragon-claw-gradle"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "net.janrupf.dragon_claw"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "net.janrupf.dragon_claw"

        minSdkVersion 21
        targetSdk flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    def keystore = System.getenv("DRAGON_CLAW_KEYSTORE")

    if (keystore != null) {
        signingConfigs {
            release {
                storeFile = file(keystore)
                storePassword = System.getenv("DRAGON_CLAW_KEYSTORE_PASSWORD")
                keyAlias = System.getenv("DRAGON_CLAW_KEYSTORE_KEY_ALIAS")
                keyPassword = System.getenv("DRAGON_CLAW_KEYSTORE_KEY_PASSWORD")
            }
        }

        buildTypes {
            release {
                signingConfig(signingConfigs.release)
            }
        }
    }
}

flutter {
    source '../..'
}

dragonClawIcons {
    icon(file("../../../assets/icon/icon-meta.json")) {
        sourceSet(android.sourceSets.main)
        target("android-icons")
    }
}

dependencies {}
